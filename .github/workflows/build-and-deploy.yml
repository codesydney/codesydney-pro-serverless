name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Run build
        run: npm run build

  prettier-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Run prettier
        run: npm run prettier:check

  server-unit-test:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Run unit tests
        run: npm run test

  server-e2e-test:
    needs: prettier-check
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Run integration tests
        run: npm run test:e2e

  lambda-deploy:
    needs: [server-unit-test, server-e2e-test]
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Build the application
        run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: 'no'
      - name: Deploy to AWS
        run: npm run serverless:deploy
